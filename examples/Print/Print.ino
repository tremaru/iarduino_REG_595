// ПРИМЕР ВЫВОДА ТЕКСТА И ЧИСЕЛ LED ДИСПЛЕЙ:   //
                                               //
#include <iarduino_REG_595.h>                  // Подключаем библиотеку для работы с 8-и битными сдвиговыми регистрами HC595/HTC595.
iarduino_REG_595 disp(5,6,7);                  // Создаём объект указывая выводы Arduino (SHCP, STCP, DS). Можно назначать любые выводы.
                                               //
void setup(){                                  //
//   Определяем настройки:                     //
//   disp.setPulseWidth (3);                   // Указываем ширину импульсов в мкс (1 ... 255). Может понадобится для линий с задержками сигналов. По умолчанию 0 мкс + задержка функции digitalWrite().
//   disp.setInvertSCL  (true);                // Инвертируем сигнал на линиях тактирования (true/false). Может понадобиться для линий с транзисторами. По умолчанию false.
//   disp.setInvertDAT  (true);                // Инвертируем сигнал на линии данных (true/false). Может понадобиться для линии с транзисторами или для дисплеев с обшим анодом. По умолчанию false.
//   disp.setSegments   ("fegdacbh");          // Указываем порядок подключения сегментов к регистрам. В примере старший бит (вывод Q7) является сегментом f, Q7=f, Q6=e, Q5=g, Q4=d, Q3=a, Q2=c, Q1=b, Q0=h. По умолчанию "hgfedcba": Q7=h, Q6=g, Q5=f, Q4=e, Q3=d, Q2=c, Q1=b, Q0=a.
     disp.setClearBefore(true);                // Указываем чистить дисплей перед выводом функцией print (true/false). По умолчанию true.
//   Инициируем работу с регистрами:           //
     disp.begin(4);                            // Инициируем работу указав количество последовательно соединённых регистров (1 ... 254).
}                                              //
                                               //
void loop(){                                   //
//   Выводим целые числа:                      //
     disp.setAlignLeft(false);                 // Выравнивание по правому краю.
     disp.print( 100    );        delay(3000); // 100 в 10й системе счисления.
     disp.print(-100,  7);        delay(3000); //-100 в 7ой системе счисления. Системы счисления от 2 до 35.
     disp.print( 100,OCT);        delay(3000); // 100 в 8ой системе счисления.
     disp.print( 100,HEX);        delay(3000); // 100 в 16й системе счисления.
     disp.setAlignLeft(true);                  // Выравнивание по левому краю.
     disp.print( 100,HEX);        delay(3000); // 100 в 16й системе счисления.
//   Выводим числа с точкой:                   //
     disp.setAlignLeft(false);                 // Выравнивание по правому краю.
     disp.print( 1.5   );         delay(3000); // 1.50 (по умолчанию с двумя знаками после запятой).
     disp.print(-1.5   );         delay(3000); //-1.50 (по умолчанию с двумя знаками после запятой).
     disp.print( 2.5, 3);         delay(3000); // 2.500 с 3 знаками после запятой.
     disp.print(-2.5, 1);         delay(3000); //-2.5 с 1 знаком после запятой.
     disp.setAlignLeft(true);                  // Выравнивание по левому краю.
     disp.print(-2.5, 1);         delay(3000); //-2.5 с 1 знаком после запятой.
//   Выводим тест:                             //
     disp.setAlignLeft(false);                 // Выравнивание по правому краю (по умолчанию).
     disp.print("on");            delay(3000); //
     disp.print("off");           delay(3000); //
     disp.setAlignLeft(true);                  // Выравнивание по левому краю.
     disp.print("off");           delay(3000); //
//   Выводим по одному символу:                //
     disp.print('g');             delay(500);  // Символ выводится в крайний правый разряд дисплея.
     disp.print(' ');             delay(500);  // Если ранее функция setClearBefore() вызвана с параметром false, то
     disp.print('o');             delay(500);  // пердыдущие символы экрана не сотрутся а сдвинутся на 1 разряд влево.
     disp.print(' ');             delay(500);  //
     disp.print('o');             delay(500);  //
     disp.print(' ');             delay(500);  //
     disp.print('d', true);       delay(500);  // Второй параметр (true) указывает включить сегмент точки.
//   Выводим несколько символов:               //
     disp.sendChar(' ');                       // Функция sendChar загружает символ, но не выводит его на экран.
     disp.sendChar(' ');                       // Каждый новый загруженный символ сдвигает предыдущие вперёд.
     disp.sendChar('1', true);                 // Второй параметр (true) указывает загрузить сегмент точки.
     disp.sendChar('0');                       // Мы загрузили символы ' ', ' ', '1.', '0', но их пока не видно.
     disp.latch();                delay(3000); // Выводим ранее загруженные символы на дисплей.
//   Чистим дисплей:                           //
     disp.clear();                delay(1000); //
}                                              //